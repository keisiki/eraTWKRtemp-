@SYUGO
#DIM 집합, 캐릭터수상한, 3      ;집합:X:Y
                               ;Y=0：캐릭터 등록 번호
                               ;  1：설정, 이동 여부(1p0: 이동 불가, 1p3: 이동 대상)
                               ;  2：이동코스트
#DIM 인원수                    ;동일 맵에 있는 인원수, 이동할 수 없는 캐릭터도 표시되어 인원수에 가산되어 있다
#DIM 입력값                    ;RESULT 취득용
CALL SYUGOS_GETDATA(인원수, 집합)
IF 인원수 == 0
	PRINTW 아무도 없다
	RETURN
ENDIF
IF CFLAG:MASTER:현재위치 == 54
	PRINTFORMW 여기서는 무리다
	RETURN
ENDIF

;전원분의 코스트 계산을 먼저 한다(아마 전원 집합의 빈도가 많기 때문에)
CALL SYUGOS_COST(인원수, 집합)

PRINTL 누구를 이동 시키겠습니까?
DO
	CALL SYUGOS_DISPDATA(인원수, 집합)
	PRINTBUTTON "[444:전원 설정]", 444
	PRINTBUTTON "[555:전원 해제]", 555
	PRINTBUTTON "[666:실행 개시]", 666
	PRINTFORML 
	PRINTBUTTON "[999:취소]", 999
	INPUT
	입력값 = RESULT
	SELECTCASE 입력값
	;개인 선택
	CASE 0 TO 인원수 - 1
		SIF !GETBIT(집합:입력값:1, 0)
			INVERTBIT 집합:입력값:1, 3
	;전체 설정
	CASE 444
		FOR LOCAL, 0, 인원수
			SIF GETBIT(집합:LOCAL:1, 0)
				CONTINUE
			SETBIT 집합:LOCAL:1, 3
		NEXT
	;전원 해제
	CASE 555
		FOR LOCAL, 0, 인원수
			CLEARBIT 집합:LOCAL:1, 3
		NEXT
	;실행 처리
	CASE 666
		IF TFLAG:운반
			PRINTFORMW %마스터는% %조사처리(CALLNAME:(TFLAG:운반),"를")% 내렸다
			TFLAG:운반 = 0
		ENDIF
		FOR LOCAL, 0, 인원수
			SIF !GETBIT(집합:LOCAL:1, 3)
				CONTINUE
			
			;가는 길 소비
			SIF TALENT:MASTER:체형 < -4
				BASE:MASTER:TSP -= (15 * 집합:LOCAL:2)
			BASE:MASTER:TSP -= (5 * 집합:LOCAL:2)
			SIF BASE:MASTER:TSP <= 0
				BREAK
			;돌아오는 길 소비
			SIF TALENT:MASTER:체형 < -4
				BASE:MASTER:TSP -= (15 * 집합:LOCAL:2)
			BASE:MASTER:TSP -= (5 * 집합:LOCAL:2)
			BASE:MASTER:TSP -= (3 * 집합:LOCAL:2)
			CFLAG:(집합:LOCAL:0):현재위치 = CFLAG:MASTER:현재위치
			;자유 행동의 중단
			Activity_Duration:(집합:LOCAL:0) = 0
			Activity_Type:(집합:LOCAL:0) = 0
			PRINTFORMW %조사처리(CALLNAME:(집합:LOCAL:0),"를")% %조사처리(NAME_FROM_PLACE(CFLAG:MASTER:현재위치),"로")% 업고 와서 내렸다
			SIF BASE:MASTER:TSP <= 0
				BREAK
		NEXT
		RETURN
	CASE 999
		RETURN
	ENDSELECT
	CLEARLINE 인원수 + 3
LOOP 1



@SYUGOS_GETDATA(인원수, 집합)
#DIM REF 집합, , 
#DIM REF 인원수
#DIM C_ID
VARSET 집합
VARSET 인원수
FOR LOCAL, 1, CHARANUM
	SIF AT_HOME(LOCAL) == 0
		CONTINUE
	SIF TALENT:MASTER:위치짐작 == 0 && CFLAG:MASTER:현재위치 != CFLAG:LOCAL:현재위치 && CAN_MOVE(CFLAG:MASTER:현재위치, CFLAG:LOCAL:현재위치) == 0
		CONTINUE
	SIF CFLAG:LOCAL:현재위치 == MAXROOM && CFLAG:LOCAL:수면
		CONTINUE
	집합:인원수:0 = LOCAL
	C_ID = 집합:인원수:0
	;선택 여부
	IF CFLAG:C_ID:현재위치 == CFLAG:MASTER:현재위치
		SETBIT 집합:인원수:1, 0
	ELSEIF CFLAG:C_ID:수면
		SETBIT 집합:인원수:1, 0
	ELSEIF !MAP_CAN_MOVE(CFLAG:C_ID:현재위치)
		SETBIT 집합:인원수:1, 0
	ELSEIF BATHCHECK(CFLAG:C_ID:현재위치) || IN_TOILET(CFLAG:C_ID:현재위치)
		SETBIT 집합:인원수:1, 0
	ELSEIF CFLAG:C_ID:현재위치 == MAXROOM || CFLAG:C_ID:현재위치 == OMANEKIBEYA()
		SETBIT 집합:인원수:1, 0
	ELSEIF CFLAG:C_ID:행동 == 5
		SETBIT 집합:인원수:1, 0
	ENDIF
	인원수 ++
NEXT



@SYUGOS_DISPDATA(인원수,집합)
#DIM REF 집합,,
#DIM 인원수
#DIM C_ID
FOR LOCAL, 0, 인원수
	C_ID = 집합:LOCAL:0
	LOCALS = {LOCAL}
	LOCALS = [%LOCALS,3,RIGHT%] - %CALLNAME:C_ID,15,LEFT%
	IF CFLAG:C_ID:현재위치 == CFLAG:MASTER:초기위치
		LOCALS = %LOCALS%%CALLNAME:MASTER%의 방
	ELSE
		LOCALS = %LOCALS%%NAME_FROM_PLACE(CFLAG:C_ID:현재위치)%
	ENDIF
	IF !MAP_CAN_MOVE(CFLAG:C_ID:현재위치)
		LOCALS = %LOCALS%%" "*(48-STRLENS(LOCALS))% 침입 불가
	ELSEIF CFLAG:C_ID:수면
		LOCALS = %LOCALS%%" "*(48-STRLENS(LOCALS))% 취침 중
	ELSEIF CFLAG:C_ID:행동 == 5
		IF CFLAG:C_ID:현재위치 == TFLAG:연회장 && TIME_PROGRESS(TIME:1) && (CFLAG:C_ID:직종 == 49 || CFLAG:C_ID:직종 == 51)
			LOCALS = %LOCALS%%" "*(48-STRLENS(LOCALS))% 연회 중
		ELSE
			LOCALS = %LOCALS%%" "*(48-STRLENS(LOCALS))% 일하는 중
		ENDIF
	ELSEIF 집합:LOCAL:2 > 0
		LOCALS = %LOCALS%%" "*(48-STRLENS(LOCALS))% 이동 거리 {집합:LOCAL:2}
	ENDIF
	IF GETBIT(집합:LOCAL:1, 0)
		SETCOLOR C_GRAY
		PRINTPLAINFORM %LOCALS%
	ELSEIF GETBIT(집합:LOCAL:1, 3)
		SETCOLOR C_AQUA
		PRINTFORM %LOCALS%
	ELSE
		PRINTFORM %LOCALS%
	ENDIF
	PRINTL
	RESETCOLOR
NEXT


;모든 캐릭터를 대상으로 이동 비용을 산출한다
;불러오기 전에 모든 캐릭터 루프를 한다면 코스트 산출 측에서 더 모든 캐릭터 루프를 하는 것보다
;산출 끝난 지점을 기억해 두는 편이 빠른 것이 아닐까?
@SYUGOS_COST(인원수, 집합)
#DIM 인원수
#DIM REF 집합,,
#DIM LIST_ID                 ;참조하고 있는 LIST의 ID
#DIM DYNAMIC DONE_CNT        ;산출 끝난 지점의 수
#DIM DYNAMIC DONE_PLACE, 100 ;산출 끝난 지점의 PLACE_ID
#DIM DYNAMIC DONE_COST,  100 ;산출 끝난 지점의 코스트
#DIM TEMP_PLACE              ;참조용 일시변수
FOR LIST_ID, 0, 인원수
	;NG처리는 먼저 해 둔다
	IF GETBIT(집합:LIST_ID:1, 0)
		집합:LIST_ID:2 = -1
		CONTINUE
	ENDIF
	
	TEMP_PLACE = FINDELEMENT(DONE_PLACE, CFLAG:(집합:LIST_ID:0):현재위치, 0, DONE_CNT)
	;산출 끝남
	IF TEMP_PLACE >= 0
		집합:LIST_ID:2 = DONE_COST:TEMP_PLACE
	;산출 아직
	ELSE
		CALL CALC_SYUGOS_COST(집합, LIST_ID)
		DONE_PLACE:DONE_CNT   = CFLAG:(집합:LIST_ID:0):현재위치
		DONE_COST:DONE_CNT    = 집합:LIST_ID:2
		DONE_CNT ++
	ENDIF
NEXT



;집합 코스트 산출
;F함수화하고 싶었지만 SKIPMOVE를 사용하고 있어서 포기, 유감
@CALC_SYUGOS_COST(집합, 대상)
#LOCALSIZE 1
#LOCALSSIZE 1
#DIM REF 집합,,
#DIM 대상
#DIM 이동코스트
#DIM 잠정목적지
#DIM 최종목적지
#DIM TEMP_현재위치
#DIM C_ID
C_ID = 집합:대상:0
TEMP_현재위치 = CFLAG:MASTER:현재위치
최종목적지 = CFLAG:C_ID:현재위치
잠정목적지 = 최종목적지
[IF_DEBUG]
PRINTFORML %CALLNAME:C_ID%의 이동코스트 계산
[ENDIF]
IF CAN_MOVE(TEMP_현재위치, 잠정목적지) & 1
	이동코스트 = 1
ELSE
	FOR 이동코스트, 1, 20
		WHILE !(CAN_MOVE(TEMP_현재위치, 잠정목적지) & 1)
			TRYCALLFORM SKIP_MOVE_{MAIN_MAP}(잠정목적지, TEMP_현재위치)
			SIF !잠정목적지
				THROW 잠정목적지가 이상합니다
			[IF_DEBUG]
			PRINTFORML {TEMP_현재위치}에서 {잠정목적지}로 직접 갈 수 없으니까 {RESULT}를 목표로 한다	
			[ENDIF]
			잠정목적지 = RESULT
		WEND
		SIF CAN_MOVE(잠정목적지, 최종목적지) & 1
			BREAK
		TEMP_현재위치 = 잠정목적지
		잠정목적지 = 최종목적지
	NEXT
ENDIF
집합:대상:2 = 이동코스트
[IF_DEBUG]
PRINTFORML %CALLNAME:C_ID%의 이동코스트는 {이동코스트}
[ENDIF]

@AssembleForMeal
#DIM 집합, 캐릭터수상한, 3 ;집합:X:Y
#DIM 인원수                      ;同一マップにいる인원수、移動できないキャラも表示され、인원수に加算されている
#DIM 입력값                    ;RESULT取得用
#DIM C_ID
#DIM NOW_TARGET
SIF CFLAG:MASTER:현재위치 == OMANEKIBEYA()
	RETURN
SIF !AT_HOME(MASTER)
	RETURN
SIF CFLAG:MASTER:현재위치 == CFLAG:MASTER:초기위치
	RETURN
SIF PRIVATEROOM:(CFLAG:MASTER:현재위치 % 100)
	RETURN
CALL SYUGOS_GETDATA(인원수, 집합)
CALL SYUGOS_COST(인원수, 집합)
SIF TARGET
	NOW_TARGET = TARGET
FOR LOCAL, 0, 인원수
	C_ID = 집합:LOCAL:0
	SIF GETBIT(집합:LOCAL:1, 0)
		CONTINUE
	;이동 횟수가 많으면 제외
	SIF 집합:LOCAL:2 > 3
		CONTINUE
	SIF CFLAG:C_ID:빡침
		CONTINUE
	IF DISH_TYPE == "디저트"
		SIF !TIME_PROGRESS(TCVAR:C_ID:디저트공복시각)
			CONTINUE
	ELSE
		SIF !TIME_PROGRESS(TCVAR:C_ID:공복시각)
			CONTINUE
	ENDIF
	CFLAG:C_ID:현재위치 = CFLAG:MASTER:현재위치
	CFLAG:C_ID:동실 = 1
	;자유행동의 중단
	Activity_Duration:C_ID = 0
	Activity_Type:C_ID = 0
	PRINTFORML 식사 낌새를 냄새로 알아차리고 %조사처리(CALLNAME:C_ID,"가")% 찾아왔다
NEXT
CALL TARGETSET_CHACK
SIF NOW_TARGET
	TARGET = NOW_TARGET
PRINTFORMW 
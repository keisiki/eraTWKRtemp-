;=========================================================
;	モブ子用の画像文字列を設定
;
;	iID：キャラ番号
;=========================================================
@SET_MOB_IMAGE_STR(iID, ARGS, NUMBER=0)
#DIM iID
#DIM NUMBER				;モブ店員用の番号

#DIMS CN_PARTS_STRUCT      ;可変画像用の文字列(服)
#DIMS CN_PARTS_STRUCT_NUDE ;可変画像用の文字列(裸)

#DIMS HAIR_TYPE        ;髪種別(STR:2000以降)
#DIMS HAED_TYPE        ;頭部種別(STR:2110以降)
#DIMS FACE_TYPE        ;表情種別(STR:2120以降)
#DIMS CLOTH_TYPE       ;服装種別(STR:2210以降)
#DIMS EYE_COLOR_TYPE   ;瞳色 *汎用色(STR:2050以降)
#DIMS HAIR_COLOR_TYPE  ;髪色 *汎用色(STR:2050以降)
#DIMS CLOTH_COLOR_TYPE ;服色 *汎用色(STR:2050以降)
#DIMS SKIN_COLOR_TYPE  ;肌色(STR:2100以降)
#DIMS EAR_COLOR_TYPE   ;耳色 *汎用色(STR:2050以降)
#DIMS TAIL_COLOR_TYPE  ;尾色 *汎用色(STR:2050以降)
#DIMS ACCESSORY_TYPE_1 ;装飾品種別(STR:2300以降)
#DIMS ACCESSORY_TYPE_2 ;装飾品種別(STR:2300以降)
#DIMS ACCESSORY_TYPE_3 ;装飾品種別(STR:2300以降)

#DIM pauseNo
#DIM nudeFlag

;パーツを랜덤に設定
HAIR_TYPE        = %STR:(RAND:22 + 2000)%
;HAED_TYPE        = %STR:(RAND:3 + 2110)%
;顔は普通一択でいいじゃろ
HAED_TYPE        = 普通な顔
FACE_TYPE        = %TEXTR("普通な目/だる目/ワル目/丸釣り目/垂れ目/釣り目/猫目")%
ACCESSORY_TYPE_1 = なし
ACCESSORY_TYPE_2 = なし
ACCESSORY_TYPE_3 = なし

pauseNo          = RAND(1,4)
;栗色は瞳色との相性が良くない様子
EYE_COLOR_TYPE   = %TEXTR("黒/金/赤/銀/青/緑/桃/紫/白/橙/水/灰")%
HAIR_COLOR_TYPE  = %STR:(RAND:13 + 2050)%
CLOTH_COLOR_TYPE = %STR:(RAND:13 + 2050)%

SKIN_COLOR_TYPE  = 普通

IF !RAND:5
	SKIN_COLOR_TYPE  = %TEXTR("褐色/日焼/不健康")%
ENDIF

SELECTCASE ARGS
	CASE "백랑텐구"
		CLOTH_TYPE = 白狼天狗服(色固定)
		SIF !RAND:5
			CLOTH_TYPE = 天狗服(色固定)
		HAIR_COLOR_TYPE  = 白
		ACCESSORY_TYPE_1 = 獣耳(耳)
		ACCESSORY_TYPE_2 = 獣しっぽ(尾)
		ACCESSORY_TYPE_3 = 白浪天狗帽子
	CASE "캇파", "スク水河童"
		CLOTH_TYPE = %TEXTR("河童服(色固定)/河童服(色固定)/河童服(色固定)/河童服")%
		IF ARGS == "スク水河童"
			CLOTH_TYPE = スク水
			CLOTH_COLOR_TYPE = 青
			ACCESSORY_TYPE_3 = 照れ
		ENDIF
		ACCESSORY_TYPE_1 = 河童帽子
		SIF !RAND:4
			ACCESSORY_TYPE_2 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
	CASE "요정", "메이드 요정", "좀비 페어리", "バニー妖精"
		CLOTH_TYPE = 妖精服
		ACCESSORY_TYPE_1 = 妖精の羽
		SIF !RAND:6
			ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
		SIF !RAND:3
			ACCESSORY_TYPE_2 = %TEXTR("ヘアバンド(白)/ヘアバンド(赤)/ヘアバンド(服)/ZUN帽(服)")%
		IF ARGS == "메이드 요정"
			CLOTH_TYPE = メイド服
			ACCESSORY_TYPE_2 = メイドカチューシャ
		ELSEIF ARGS == "좀비 페어리"
			SKIN_COLOR_TYPE  = 悪魔
			HAIR_COLOR_TYPE = %TEXTR("白/灰/紫")%
			CLOTH_COLOR_TYPE = %TEXTR("灰/黒/栗")%
			SIF !RAND:3
				CLOTH_TYPE = ゴスロリ
		ELSEIF ARGS == "バニー妖精"
			;CSV登録時に別リソースで上書きしてある
			CLOTH_TYPE = 下着
			CLOTH_COLOR_TYPE =%TEXTR("黒/黒/黒/赤/青/")%
			;頭に色々付きすぎかも
			ACCESSORY_TYPE_3 = ウサ耳
			HAIR_TYPE = %TEXTR("長髪/セミロング/ショートカット/三つ編み/短髪/おさげ髪/ポンパドール/サイドダウン/お団子髪/まとめ髪/ボブカット/シニヨン/ロングヘア")%
			ACCESSORY_TYPE_2 = バニープリム
			SIF pauseNo == 2
				ACCESSORY_TYPE_2 = バニープリム(ポーズ2用)
		ENDIF
	CASE "옥토끼"
		CLOTH_TYPE = 玉兎服(色固定)
		ACCESSORY_TYPE_1 = 玉兎ヘルメット
		SIF !RAND:6
			ACCESSORY_TYPE_2 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
		;ヘルメットからはみ出るので髪型制限
		HAIR_TYPE = %TEXTR("長髪/セミロング/ショートカット/三つ編み/短髪/おさげ髪")%
	CASE "둔갑너구리"
		CLOTH_TYPE = 和服
		SIF RAND:5
			FACE_TYPE = %TEXTR("だる目(太眉)/ワル目(太眉)")%
		ACCESSORY_TYPE_1 = たぬき耳
		ACCESSORY_TYPE_2 = たぬきしっぽ
		;SIF !RAND:6
		;	ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
		ACCESSORY_TYPE_3 = たぬき葉っぱ
	CASE "둔갑여우"
		CLOTH_TYPE = %TEXTR("和服/ゴスロリ")%
		ACCESSORY_TYPE_1 = 狐耳
		ACCESSORY_TYPE_2 = 狐しっぽ
		SIF !RAND:6
			ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
	CASE "둔갑고양이"
		CLOTH_TYPE = %TEXTR("和服/私服D")%
		ACCESSORY_TYPE_1 = ネコ耳(耳)
		ACCESSORY_TYPE_2 = ネコしっぽ
		SIF !RAND:2
			FACE_TYPE = 猫目
		SIF !RAND:6
			ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
	CASE "이나바"
		CLOTH_TYPE = %TEXTR("ドロワーズ/私服D")%
		SELECTCASE RAND:5
			CASE 0
				HAIR_COLOR_TYPE = 白
			CASE 1
				HAIR_COLOR_TYPE = 栗
			CASEELSE
			;ウサ耳が映えるのは黒だと思う
				HAIR_COLOR_TYPE = 黒
		ENDSELECT
		SIF !RAND:3
			EYE_COLOR_TYPE = 赤
		CLOTH_COLOR_TYPE = 白
		ACCESSORY_TYPE_1 = ウサ耳
		;ウサ耳とテール系は見てくれの相性が悪い？ので制限
		HAIR_TYPE = %TEXTR("長髪/セミロング/ショートカット/三つ編み/短髪/おさげ髪/ポンパドール/サイドダウン/お団子髪/まとめ髪/ボブカット/シニヨン/ロングヘア")%
	CASE "마을 아가씨","유부녀","店番","赤巫女","緑巫女"
		IF RAND:5 > 0
			CLOTH_TYPE = 和服
		ELSE
			CLOTH_TYPE = %TEXTR("私服A/私服B/私服CA/私服CB/私服D")%
		ENDIF
		SIF !RAND:4
			ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
		;SIF !RAND:3
		;	ACCESSORY_TYPE_1 = %TEXTR("ヘアバンド(白)/ヘアバンド(赤)/ヘアバンド(服)")%
		SIF ARGS == "마을 아가씨" && !RAND:8
			CLOTH_TYPE = ゴスロリ
		;顔絵のみで立ち絵は未実装
		IF ARGS == "赤巫女"
			CLOTH_TYPE = 巫女服(赤)
			HAIR_COLOR_TYPE = 黒
		ELSEIF ARGS == "緑巫女"
			CLOTH_TYPE = 巫女服(緑)
			HAIR_COLOR_TYPE = 緑
		ENDIF
	CASE "오니"
		CLOTH_TYPE = 和服
		SELECTCASE RAND:2
			CASE 0
				ACCESSORY_TYPE_1 = 鬼の角
				;二角の場合はツインテール系との相性が悪いので制限
				HAIR_TYPE = %TEXTR("長髪/セミロング/ショートカット/ポニーテール/短髪/ポンパドール/ダブルポニー/まとめ髪/ボブカット/シニヨン/ロングヘア")%
			CASEELSE
				ACCESSORY_TYPE_1 = 鬼の角(一角)
		ENDSELECT
	;いちおうモブ子にも流用できるようになってる。でも（需要と実装予定が）ないです
	CASE "尼"
		HAIR_TYPE = 薙髪
		CLOTH_TYPE = 和服
		CLOTH_COLOR_TYPE = 黒
		HAIR_COLOR_TYPE = 黒
		ACCESSORY_TYPE_1 = 尼頭巾
		SIF !RAND:4
			ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
	CASE "番台ちゃん"
		IF !RAND:3
			CLOTH_TYPE = バスタオル
			SIF !RAND:3
				HAIR_TYPE = 巻きタオル
		ELSE
			CLOTH_TYPE = %TEXTR("私服A/私服B/私服CA/私服CB/私服D/ゴスロリ")%
			SIF RAND:3
				CLOTH_TYPE = 和服
		ENDIF
		SIF !RAND:4
			ACCESSORY_TYPE_3 = %TEXTR("メガネ(普通)/メガネ(赤縁)/メガネ(黒縁)")%
		;この子は目つき悪そうなイメージなので
		FACE_TYPE = %TEXTR("だる目/ワル目")%
	CASEELSE
		CLOTH_TYPE       = %STR:(RAND:17 + 2210)%
		ACCESSORY_TYPE_1 = %STR:(RAND:32 + 2300)%
		ACCESSORY_TYPE_2 = %STR:(RAND:32 + 2300)%
		ACCESSORY_TYPE_3 = %STR:(RAND:32 + 2300)%
ENDSELECT

;化け狸以外も確率で太眉
IF GROUPMATCH(FACE_TYPE, "だる目", "ワル目") && !RAND:4
	FACE_TYPE    = %FACE_TYPE%(太眉)
;リソースは登録されてるので黒目ありを混ぜてみる
ELSEIF !GROUPMATCH(EYE_COLOR_TYPE, "桃", "紫", "金", "白") && !RAND:3 && STRFIND(FACE_TYPE, "太眉") == -1
	FACE_TYPE    = %FACE_TYPE%(黒め)
ENDIF
EAR_COLOR_TYPE   = %HAIR_COLOR_TYPE%
TAIL_COLOR_TYPE  = %HAIR_COLOR_TYPE%

;仕様上、太眉は瞳色＝眉色なので髪色も合わせておく
IF STRFIND(FACE_TYPE, "太眉") >= 0 && ARGS != "イナバ"
	EYE_COLOR_TYPE = %HAIR_COLOR_TYPE%
	SIF EYE_COLOR_TYPE == "栗"
		EYE_COLOR_TYPE = 橙
;髪色に合わせた方が統一感出るよね。でもスク水はやっぱり青だよね
ELSEIF RAND:2 && !GROUPMATCH(ARGS, "スク水河童", "バニー妖精") && STRFIND(FACE_TYPE, "太眉") == -1
	CLOTH_COLOR_TYPE = %HAIR_COLOR_TYPE%
ENDIF

;可変画像の設定
CN_PARTS_STRUCT = ""
CN_PARTS_STRUCT += GET_CN_STR_HAIR(HAIR_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_HAED(HAED_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_EYE_COLOR(EYE_COLOR_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_HAIR_COLOR(HAIR_COLOR_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_CLOTH_COLOR(CLOTH_COLOR_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_SKIN_COLOR(SKIN_COLOR_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_EAR_COLOR(HAIR_COLOR_TYPE)
CN_PARTS_STRUCT += GET_CN_STR_TAIL_COLOR(HAIR_COLOR_TYPE)


; 服・裸で文字列を分ける
CN_PARTS_STRUCT_NUDE = %CN_PARTS_STRUCT%

; 服
nudeFlag = 0
CN_PARTS_STRUCT += GET_CN_STR_CLOTH(CLOTH_TYPE, nudeFlag, pauseNo)
CN_PARTS_STRUCT += GET_CN_STR_ACCESSORY(ACCESSORY_TYPE_1, 1, nudeFlag)
CN_PARTS_STRUCT += GET_CN_STR_ACCESSORY(ACCESSORY_TYPE_2, 2, nudeFlag)
CN_PARTS_STRUCT += GET_CN_STR_ACCESSORY(ACCESSORY_TYPE_3, 3, nudeFlag)
; 裸
nudeFlag = 1
CN_PARTS_STRUCT_NUDE += GET_CN_STR_CLOTH(CLOTH_TYPE, nudeFlag, pauseNo)
CN_PARTS_STRUCT_NUDE += GET_CN_STR_ACCESSORY(ACCESSORY_TYPE_1, 1, nudeFlag)
CN_PARTS_STRUCT_NUDE += GET_CN_STR_ACCESSORY(ACCESSORY_TYPE_2, 2, nudeFlag)
CN_PARTS_STRUCT_NUDE += GET_CN_STR_ACCESSORY(ACCESSORY_TYPE_3, 3, nudeFlag)
;保存
IF iID
	CSTR:iID:모브코화상문자열_옷_통상 = %CN_PARTS_STRUCT%%GET_CN_STR_FACE(FACE_TYPE, "通常", HAIR_COLOR_TYPE)%
	CSTR:iID:모브코화상문자열_옷_미소 = %CN_PARTS_STRUCT%%GET_CN_STR_FACE(FACE_TYPE, "笑顔", HAIR_COLOR_TYPE)%
	CSTR:iID:모브코화상문자열_옷_분노 = %CN_PARTS_STRUCT%%GET_CN_STR_FACE(FACE_TYPE, "怒り", HAIR_COLOR_TYPE)%
	CSTR:iID:모브코화상문자열_알몸_통상 = %CN_PARTS_STRUCT_NUDE%%GET_CN_STR_FACE(FACE_TYPE, "通常", HAIR_COLOR_TYPE)%
	CSTR:iID:모브코화상문자열_알몸_미소 = %CN_PARTS_STRUCT_NUDE%%GET_CN_STR_FACE(FACE_TYPE, "笑顔２", HAIR_COLOR_TYPE)%
	CSTR:iID:모브코화상문자열_알몸_분노 = %CN_PARTS_STRUCT_NUDE%%GET_CN_STR_FACE(FACE_TYPE, "怒り", HAIR_COLOR_TYPE)%
;開始時にモブ店員顔作成。セーブはしないので広域変数に格納
ELSE
	モブ子店員画像文字列_服_通常:NUMBER = %CN_PARTS_STRUCT%%GET_CN_STR_FACE(FACE_TYPE, "通常", HAIR_COLOR_TYPE)%
	モブ子店員画像文字列_服_笑顔:NUMBER = %CN_PARTS_STRUCT%%GET_CN_STR_FACE(FACE_TYPE, "笑顔", HAIR_COLOR_TYPE)%
	モブ子店員画像文字列_服_怒り:NUMBER = %CN_PARTS_STRUCT%%GET_CN_STR_FACE(FACE_TYPE, "怒り", HAIR_COLOR_TYPE)%
ENDIF
RETURN RESULT

;=========================================================
;	髪型文字列の取得
;
;	HAIR_TYPE：髪種別(STR:2000以降)
;=========================================================
@GET_CN_STR_HAIR(HAIR_TYPE)
#FUNCTIONS
#DIMS HAIR_TYPE

SELECTCASE HAIR_TYPE
	CASE "長髪"
		RETURNF "[前髪:前髪_お嬢様][後髪:後髪_ロング]"
	CASE "セミロング"
		RETURNF "[前髪:前髪_ワイルド][後髪:後髪_セミロング]"
	CASE "ショートカット"
		RETURNF "[前髪:前髪_ぱっつん][後髪:後髪_ショート]"
	CASE "ポニーテール"
		RETURNF "[前髪:前髪_お嬢様][後髪:後髪_ポニーテール]"
	CASE "ツインテール"
		RETURNF "[前髪:前髪_無造作][後髪:後髪_ツインテール(長)]"
	CASE "サイドテール"
		RETURNF "[前髪:前髪_中分け1][後髪:後髪_サイドテール]" + "[装飾10:装飾_ヘアバンド(赤)]"
	CASE "縦ロール"
		RETURNF "[前髪:前髪_ぱっつん][後髪:後髪_ツインドリル]"
	CASE "ツインリング"
		;髪型が無い
		RETURNF "[前髪:前髪_ナチュラル][後髪:後髪_ツインテール(短)]"
	CASE "三つ編み"
		RETURNF "[前髪:前髪_横分け][後髪:後髪_三つ編み]"
	CASE "短髪"
		RETURNF "[前髪:前髪_無造作][後髪:後髪_ショート]"
	CASE "おさげ髪"
		RETURNF "[前髪:前髪_ワイルド][後髪:後髪_ショート]" + "[装飾10:装飾_もみあげ編み(髪)]"
	CASE "ポンパドール"
		RETURNF "[前髪:前髪_中分け1][後髪:後髪_ウェーブセミロング]"
	CASE "ポニーアップ"
		RETURNF "[前髪:前髪_無造作][後髪:後髪_ポニーテール]"
	CASE "サイドダウン"
		RETURNF "[前髪:前髪_横分け][後髪:後髪_ショート]" + "[装飾10:装飾_もみあげ片編み(髪)]"
	CASE "お団子髪"
		;髪型が無い
		RETURNF "[前髪:前髪_ぱっつん][後髪:後髪_セミロング]"
	CASE "ツーサイドアップ"
		RETURNF "[前髪:前髪_ぱっつん][後髪:後髪_ツインテール(短)]"
	CASE "ダブルポニー"
		RETURNF "[前髪:前髪_中分け1][後髪:後髪_ポニーテール]"
	CASE "横ロール"
		RETURNF "[前髪:前髪_ナチュラル][後髪:後髪_ツインドリル]"
	CASE "まとめ髪"
		RETURNF "[前髪:前髪_ワイルド][後髪:後髪_サイドテール]"
	CASE "ボブカット"
		RETURNF "[前髪:前髪_ぱっつん][後髪:後髪_ボブカット]"
	CASE "シニヨン"
		;髪型が無い
		RETURNF "[前髪:前髪_ウェーブ][後髪:後髪_ウェーブショート]"
	CASE "ロングヘア"
		RETURNF "[前髪:前髪_ナチュラル][後髪:後髪_ウェーブロング]"
	CASE "薙髪"
		RETURNF ""
	CASE "巻きタオル"
		RETURNF "[前髪:前髪_巻きタオル]"
	CASEELSE
		RETURNF "[前髪:前髪_お嬢様][後髪:後髪_ロング]"
ENDSELECT

;=========================================================
;	頭部文字列の取得
;
;	HAED_TYPE：頭部種別(STR:2110以降)
;=========================================================
@GET_CN_STR_HAED(HAED_TYPE)
#FUNCTIONS
#DIMS HAED_TYPE

RETURNF @"[頭部:頭部_%HAED_TYPE%]"

;=========================================================
;	表情文字列の取得
;
;	FACE_TYPE：表情種別(STR:2120以降)
;	moodStr：表情種別("通常"・"笑顔"・"怒り"・"笑顔２")
;	HAIR_COLOR_TYPE：髪色(STR:2050以降)
;	* 髪色が赤系統の場合、見えづらいので[マーク(怒り赤)]を[マーク(怒り黄)]に変更
;	* 怒りマークの装飾番号を9に変更 髪型との干渉避け
;	* (黒め)の表情を掘り起こすように改変
;=========================================================
@GET_CN_STR_FACE(FACE_TYPE, moodStr, HAIR_COLOR_TYPE)
#FUNCTIONS
#DIMS FACE_TYPE
#DIMS moodStr
#DIMS HAIR_COLOR_TYPE
#DIMS moodStr2
#DIMS 指定
#DIMS 指定2
指定 = 
指定2 = 
IF STRFIND(FACE_TYPE, "黒め") >= 0
	指定 = (黒め)
ELSEIF STRFIND(FACE_TYPE, "太眉") >= 0
	指定 = (太眉)
	指定2 = (太眉)
ENDIF

IF moodStr == "笑顔２"
	moodStr2 = 笑顔
ELSE
	moodStr2 = %moodStr%
ENDIF

SELECTCASE FACE_TYPE
	CASE "普通な目", "普通な目(黒め)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_普通な目%指定%1][表情:表情_笑い(口閉じ)]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_閉じ目2][表情:表情_笑い(口開き)]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_普通な目%指定%2][表情:表情_怒り(口開き)][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASE "だる目", "だる目(黒め)", "だる目(太眉)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_だる目%指定%1][表情:表情_笑い(口閉じ)%指定2%]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_だる目%指定%2][表情:表情_笑い(ニッ)%指定2%]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_だる目%指定%3][表情:表情_怒り(口開き)%指定2%][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASE "ワル目", "ワル目(黒め)", "ワル目(太眉)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_ワル目%指定%1][表情:表情_笑い(口閉じ)%指定2%]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_ワル目%指定%2][表情:表情_笑い(ニッ)%指定2%]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_ワル目%指定%3][表情:表情_怒り(口閉じ)%指定2%][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASE "丸釣り目", "丸釣り目(黒め)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_丸釣り目%指定%1][表情:表情_笑い(口閉じ)]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_閉じ目2][表情:表情_笑い(口開き)]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_丸釣り目%指定%2][表情:表情_怒り(口開き)][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASE "垂れ目", "垂れ目(黒め)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_垂れ目%指定%1][表情:表情_笑い(口閉じ)]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_閉じ目2][表情:表情_笑い(口閉じ)]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_垂れ目%指定%2][表情:表情_怒り(口閉じ)][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASE "釣り目", "釣り目(黒め)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_釣り目%指定%1][表情:表情_笑い(口閉じ)]"
			CASE "笑顔"
				LOCALS = [目瞳:目瞳_閉じ目2][表情:表情_笑い(口開き)]"
			CASE "怒り"
				LOCALS = [目瞳:目瞳_釣り目%指定%2][表情:表情_怒り(口開き)][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASE "猫目", "猫目(黒め)"
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_丸釣り目%指定%1][表情:表情_猫口(口閉じ)]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_閉じ目2][表情:表情_猫口(口開き)]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_普通な目%指定%2][表情:表情_怒り(口開き)][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
	CASEELSE
		SELECTCASE moodStr2
			CASE "通常"
				RETURNF @"[目瞳:目瞳_普通な目%指定%1][表情:表情_笑い(口閉じ)]"
			CASE "笑顔"
				LOCALS = @"[目瞳:目瞳_閉じ目2][表情:表情_笑い(口開き)]"
			CASE "怒り"
				LOCALS = @"[目瞳:目瞳_普通な目%指定%2][表情:表情_怒り(口開き)][装飾9:装飾_マーク(怒り赤)]"
		ENDSELECT
ENDSELECT
SIF moodStr == "笑顔２"
	LOCALS += "[装飾9:装飾_照れ][乗色:朱色]"
SIF GET_CN_STR_HAIR_COLOR_IS_RED(HAIR_COLOR_TYPE)
	LOCALS = %REPLACE(@"%LOCALS%","怒り赤","怒り黄")%
RETURNF LOCALS

;=========================================================
;	服装文字列の取得
;
;	CLOTH_TYPE：服装種別(STR:2210以降)
;	nudeFlag：裸の場合、1
;	pauseNo：ポーズ番号(1,2,3 のいずれか)
;=========================================================
@GET_CN_STR_CLOTH(CLOTH_TYPE, nudeFlag, pauseNo)
#FUNCTIONS
#DIMS CLOTH_TYPE
#DIM nudeFlag = 0
#DIM pauseNo = 1

IF nudeFlag
	SELECTCASE TALENT:RANDOM_CHARANUM:가슴사이즈
		CASE 0
			RETURNF @"[身体:身体_素体(並乳){pauseNo}]"
		CASE IS > 0
			RETURNF @"[身体:身体_素体(巨乳){pauseNo}]"
		CASE IS < 0
			RETURNF @"[身体:身体_素体(絶壁){pauseNo}]"
	ENDSELECT
	;RETURNF @"[身体:身体_素体{pauseNo}]"
ELSE
	RETURNF @"[身体:身体_%CLOTH_TYPE%{pauseNo}]"
ENDIF

;=========================================================
;	装飾品文字列の取得
;
;	ACCESSORY_TYPE：装飾品(STR:2300以降)
;	accessoryNumber：装飾品の描画順序
;	nudeFlag：裸の場合、1
;=========================================================
@GET_CN_STR_ACCESSORY(ACCESSORY_TYPE, accessoryNumber, nudeFlag)
#FUNCTIONS
#DIMS ACCESSORY_TYPE
#DIM accessoryNumber
#DIM nudeFlag = 0

SELECTCASE ACCESSORY_TYPE
	CASE "ZUN帽","ZUN帽(服)","河童帽子","天狗帽子","白浪天狗帽子"
		SIF !nudeFlag
			RETURNF  @"[装飾{accessoryNumber}:装飾_%ACCESSORY_TYPE%]"
	CASEELSE
		RETURNF  @"[装飾{accessoryNumber}:装飾_%ACCESSORY_TYPE%]"
ENDSELECT

;=========================================================
;	髪色文字列の取得
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_HAIR_COLOR(COLOR_TYPE)
#FUNCTIONS
#DIMS COLOR_TYPE

RETURNF @"[髪色:%COLOR_TYPE%]"

;=========================================================
;	髪の色が赤系統かを判定
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_HAIR_COLOR_IS_RED(COLOR_TYPE)
#FUNCTION
#DIMS COLOR_TYPE

SELECTCASE COLOR_TYPE
	CASE "赤","桃","紫","橙"
		RETURNF 1
	CASEELSE
		RETURNF 0
ENDSELECT

;=========================================================
;	瞳色文字列の取得
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_EYE_COLOR(COLOR_TYPE)
#FUNCTIONS
#DIMS COLOR_TYPE

RETURNF @"[瞳色:%COLOR_TYPE%]"

;=========================================================
;	服色文字列の取得
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_CLOTH_COLOR(COLOR_TYPE)
#FUNCTIONS
#DIMS COLOR_TYPE

RETURNF @"[服色:%COLOR_TYPE%]"

;=========================================================
;	肌色文字列の取得
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_SKIN_COLOR(SKIN_COLOR_TYPE)
#FUNCTIONS
#DIMS SKIN_COLOR_TYPE

RETURNF @"[肌色:%SKIN_COLOR_TYPE%]"

;=========================================================
;	耳色文字列の取得
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_EAR_COLOR(COLOR_TYPE)
#FUNCTIONS
#DIMS COLOR_TYPE

RETURNF @"[耳色:%COLOR_TYPE%]"

;=========================================================
;	尾色文字列の取得
;
;	COLOR_TYPE：汎用色(STR:2050以降)
;=========================================================
@GET_CN_STR_TAIL_COLOR(COLOR_TYPE)
#FUNCTIONS
#DIMS COLOR_TYPE

RETURNF @"[尾色:%COLOR_TYPE%]"
